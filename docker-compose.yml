version: '3.8'

services:
  aobaspace-api:
    build:
      context: ./aobaspace-api
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    # Removed volume mounts for application code to ensure Docker build artifacts are used
    # volumes:
    #   - ./aobaspace-api:/app
    #   - /app/node_modules
    environment:
      - NODE_ENV=development
    env_file:
      - ./aobaspace-api/.env
    depends_on:
      - postgres
    networks:
      - aobaspace-network

  aobaspace-web:
    build:
      context: ./aobaspace-web
      dockerfile: Dockerfile
    ports:
      - "3001:3000" # Frontend runs on port 3000 inside container, map to 3001 on host
    # Removed volume mounts for application code to ensure Docker build artifacts are used
    # volumes:
    #   - ./aobaspace-web:/app
    #   - /app/node_modules
    env_file:
      - ./aobaspace-web/.env
    depends_on:
      - aobaspace-api
    networks:
      - aobaspace-network

  postgres:
    image: postgres:14-alpine
    restart: always
    environment:
      POSTGRES_DB: aobaspace_db
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - aobaspace-network
    healthcheck: # Added healthcheck for postgres
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 10s # Give it some time to start initially

networks:
  aobaspace-network:
    driver: bridge

volumes:
  postgres_data:
  